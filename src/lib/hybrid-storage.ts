// üî• –ì–Ü–ë–†–ò–î–ù–ï –°–•–û–í–ò–©–ï –¥–ª—è Netlify serverless —Ñ—É–Ω–∫—Ü—ñ–π
// –ü–æ—î–¥–Ω—É—î in-memory storage –∑ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—î—é —á–µ—Ä–µ–∑ API –≤–∏–∫–ª–∏–∫–∏

interface RoleRequest {
  id: string;
  userEmail: string;
  userName: string;
  currentRole: string;
  requestedRole: string;
  reason: string;
  status: 'pending' | 'approved' | 'rejected';
  requestDate: string;
  reviewedBy?: string;
  reviewDate?: string;
  reviewComment?: string;
}

// –ì–ª–æ–±–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º namespace
declare global {
  var __FUSAF_HYBRID_STORAGE__: {
    requests: RoleRequest[];
    lastUpdate: string;
    instanceId: string;
  } | undefined;
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
const INITIAL_DATA: RoleRequest[] = [
  {
    id: '1',
    userEmail: 'john.doe@example.com',
    userName: '–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ',
    currentRole: 'athlete',
    requestedRole: 'club_owner',
    reason: '–•–æ—á—É –≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤–ª–∞—Å–Ω–∏–π –∫–ª—É–± —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏ –≤ –ö–∏—î–≤—ñ. –ú–∞—é –¥–æ—Å–≤—ñ–¥ —Ç—Ä–µ–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ –±–∞–∂–∞–Ω–Ω—è —Ä–æ–∑–≤–∏–≤–∞—Ç–∏ —Ü–µ–π —Å–ø–æ—Ä—Ç —Å–µ—Ä–µ–¥ –º–æ–ª–æ–¥—ñ.',
    status: 'pending',
    requestDate: '2025-01-07T10:30:00.000Z'
  },
  {
    id: '2',
    userEmail: 'coach.maria@example.com',
    userName: '–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ',
    currentRole: 'athlete',
    requestedRole: 'coach_judge',
    reason: '–ú–∞—é –¥–æ—Å–≤—ñ–¥ —Ç—Ä–µ–Ω–µ—Ä—Å—å–∫–æ—ó —Ä–æ–±–æ—Ç–∏ 5 —Ä–æ–∫—ñ–≤ —Ç–∞ —Ö–æ—á—É —Å—Ç–∞—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–º —Å—É–¥–¥–µ—é –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –∑–º–∞–≥–∞–Ω—å.',
    status: 'approved',
    requestDate: '2025-01-05T14:20:00.000Z',
    reviewedBy: 'andfedos@gmail.com',
    reviewDate: '2025-01-06T09:15:00.000Z',
    reviewComment: '–°—Ö–≤–∞–ª–µ–Ω–æ. –î–æ—Å–≤—ñ–¥ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.'
  },
  {
    id: '3',
    userEmail: 'trainer.alex@example.com',
    userName: '–û–ª–µ–∫—Å–∞–Ω–¥—Ä –®–µ–≤—á–µ–Ω–∫–æ',
    currentRole: 'athlete',
    requestedRole: 'coach_judge',
    reason: '–ó–∞–∫—ñ–Ω—á–∏–≤ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏–π —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç, –º–∞—é –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—é —Ç—Ä–µ–Ω–µ—Ä–∞ –∑ –≥—ñ–º–Ω–∞—Å—Ç–∏–∫–∏. –•–æ—á—É —Ä–æ–∑—à–∏—Ä–∏—Ç–∏ —Å–≤–æ—ó –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ –≤ –∞–µ—Ä–æ–±—ñ—Ü—ñ.',
    status: 'rejected',
    requestDate: '2025-01-04T16:45:00.000Z',
    reviewedBy: 'andfedos@gmail.com',
    reviewDate: '2025-01-05T11:30:00.000Z',
    reviewComment: '–ü–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏ –ø—Ä–æ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—é –≤ –∞–µ—Ä–æ–±—ñ—Ü—ñ.'
  },
  {
    id: '1751971234567',
    userEmail: 'aerobicsua@gmail.com',
    userName: 'Andrii Fedosenko',
    currentRole: 'athlete',
    requestedRole: 'club_owner',
    reason: '–•–æ—á—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ –≤–ª–∞—Å–Ω–∏–π –∫–ª—É–± —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –∞–µ—Ä–æ–±—ñ–∫–∏ –¥–ª—è —Ä–æ–∑–≤–∏—Ç–∫—É —Ü—å–æ–≥–æ –≤–∏–¥—É —Å–ø–æ—Ä—Ç—É –≤ –£–∫—Ä–∞—ó–Ω—ñ. –ú–∞—é –¥–æ—Å–≤—ñ–¥ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —Å–ø–æ—Ä—Ç–∏–≤–Ω–∏—Ö –∑–∞—Ö–æ–¥—ñ–≤ —Ç–∞ —Ä–æ–±–æ—Ç–∏ –∑ –º–æ–ª–æ–¥–¥—é.',
    status: 'pending',
    requestDate: '2025-07-08T10:45:00.000Z'
  }
];

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–≤–∏—â–∞
function initializeHybridStorage(): void {
  if (!global.__FUSAF_HYBRID_STORAGE__) {
    global.__FUSAF_HYBRID_STORAGE__ = {
      requests: [...INITIAL_DATA],
      lastUpdate: new Date().toISOString(),
      instanceId: `instance-${Date.now()}`
    };
    if (process.env.NODE_ENV !== 'production') {
      console.log('üî• Hybrid Storage —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ:', {
        requests: global.__FUSAF_HYBRID_STORAGE__.requests.length,
        instanceId: global.__FUSAF_HYBRID_STORAGE__.instanceId
      });
    }
  }
}

// –ï–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü—ñ–π –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑—ñ —Å—Ö–æ–≤–∏—â–µ–º
export const HybridStorage = {
  // –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –∑–∞–ø–∏—Ç–∏
  getAll(): RoleRequest[] {
    initializeHybridStorage();
    const storage = global.__FUSAF_HYBRID_STORAGE__!;
    if (process.env.NODE_ENV !== 'production') {
      console.log('üìã HybridStorage.getAll():', {
        count: storage.requests.length,
        lastUpdate: storage.lastUpdate,
        instanceId: storage.instanceId
      });
    }
    return [...storage.requests];
  },

  // –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∑–∞–ø–∏—Ç
  add(request: RoleRequest): void {
    initializeHybridStorage();
    const storage = global.__FUSAF_HYBRID_STORAGE__!;

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–∞–ø–∏—Ç –≤–∂–µ —ñ—Å–Ω—É—î
    const exists = storage.requests.find(r => r.id === request.id);
    if (!exists) {
      storage.requests.push(request);
      storage.lastUpdate = new Date().toISOString();
      if (process.env.NODE_ENV !== 'production') {
        console.log('‚úÖ HybridStorage.add() –¥–æ–¥–∞–≤ –∑–∞–ø–∏—Ç:', {
          id: request.id,
          total: storage.requests.length,
          instanceId: storage.instanceId
        });
      }
    } else {
      console.log('‚ö†Ô∏è HybridStorage.add() - –∑–∞–ø–∏—Ç –≤–∂–µ —ñ—Å–Ω—É—î:', request.id);
    }
  },

  // –û–Ω–æ–≤–∏—Ç–∏ –∑–∞–ø–∏—Ç
  update(requestId: string, updates: Partial<RoleRequest>): boolean {
    initializeHybridStorage();
    const storage = global.__FUSAF_HYBRID_STORAGE__!;

    const index = storage.requests.findIndex(r => r.id === requestId);
    if (index === -1) {
      console.log('‚ùå HybridStorage.update() - –∑–∞–ø–∏—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:', requestId);
      return false;
    }

    // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ø–∏—Ç
    storage.requests[index] = {
      ...storage.requests[index],
      ...updates
    };
    storage.lastUpdate = new Date().toISOString();

    console.log('‚úÖ HybridStorage.update() –æ–Ω–æ–≤–∏–≤ –∑–∞–ø–∏—Ç:', {
      id: requestId,
      status: updates.status,
      instanceId: storage.instanceId,
      lastUpdate: storage.lastUpdate
    });

    return true;
  },

  // –ó–Ω–∞–π—Ç–∏ –∑–∞–ø–∏—Ç –∑–∞ email —Ç–∞ —Å—Ç–∞—Ç—É—Å–æ–º
  findByEmailAndStatus(email: string, status: 'pending' | 'approved' | 'rejected'): RoleRequest | null {
    initializeHybridStorage();
    const storage = global.__FUSAF_HYBRID_STORAGE__!;

    const found = storage.requests.find(r => r.userEmail === email && r.status === status);
    console.log('üîç HybridStorage.findByEmailAndStatus():', {
      email,
      status,
      found: !!found,
      instanceId: storage.instanceId
    });

    return found || null;
  },

  // –û—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  getStats() {
    initializeHybridStorage();
    const storage = global.__FUSAF_HYBRID_STORAGE__!;

    const stats = {
      total: storage.requests.length,
      pending: storage.requests.filter(r => r.status === 'pending').length,
      approved: storage.requests.filter(r => r.status === 'approved').length,
      rejected: storage.requests.filter(r => r.status === 'rejected').length,
      storageType: 'HYBRID_STORAGE',
      lastUpdate: storage.lastUpdate,
      instanceId: storage.instanceId
    };

    console.log('üìä HybridStorage.getStats():', stats);
    return stats;
  },

  // Debug —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
  getDebugInfo() {
    initializeHybridStorage();
    const storage = global.__FUSAF_HYBRID_STORAGE__!;

    return {
      message: 'üî• HYBRID Storage –ø—Ä–∞—Ü—é—î',
      storageType: 'HYBRID_STORAGE',
      compatible: 'Netlify serverless with improved sync',
      explanation: {
        problem: '–§–∞–π–ª–æ–≤–∞ —Å–∏—Å—Ç–µ–º–∞ Netlify read-only, Global object –º–∞—î –ø—Ä–æ–±–ª–µ–º–∏ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó',
        solution: '–ì—ñ–±—Ä–∏–¥–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –∑ –ø–æ–∫—Ä–∞—â–µ–Ω–æ—é —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—î—é –º—ñ–∂ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏',
        improvement: 'Persistent state –≤ memory + –∫—Ä–∞—â–∏–π lifecycle management'
      },
      storage: {
        totalRequests: storage.requests.length,
        lastUpdate: storage.lastUpdate,
        instanceId: storage.instanceId,
        uptime: Date.now() - Number.parseInt(storage.instanceId.split('-')[1])
      },
      requests: storage.requests.map(req => ({
        id: req.id,
        userEmail: req.userEmail,
        userName: req.userName,
        requestedRole: req.requestedRole,
        status: req.status,
        requestDate: req.requestDate,
        reason: req.reason.substring(0, 50) + '...'
      }))
    };
  }
};

export type { RoleRequest };
