"use client";

import { useState } from "react";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { useSession, signIn, signOut } from "next-auth/react";
import { Button } from "@/components/ui/button";
import {
  NavigationMenu,
  NavigationMenuContent,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
  NavigationMenuTrigger,
} from "@/components/ui/navigation-menu";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Search, Menu, User, LogIn, LogOut, Settings, UserCircle } from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Logo } from "@/components/Logo";

export function Header() {
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const { data: session, status } = useSession();
  const router = useRouter();

  const handleSignIn = () => {
    router.push('/auth/signin');
  };

  const handleSignOut = () => {
    signOut();
  };

  const getRoleLabel = (role: string) => {
    switch (role) {
      case "athlete":
        return "–°–ø–æ—Ä—Ç—Å–º–µ–Ω";
      case "club_owner":
        return "–í–ª–∞—Å–Ω–∏–∫ –∫–ª—É–±—É";
      case "coach_judge":
        return "–¢—Ä–µ–Ω–µ—Ä/–°—É–¥–¥—è";
      case "admin":
        return "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä";
      default:
        return "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á";
    }
  };

  const getRolesLabels = (roles: string[] | undefined) => {
    if (!roles || roles.length === 0) return "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á";
    if (roles.includes("admin")) return "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä";

    const labels = roles.map(role => {
      switch (role) {
        case "athlete": return "–°–ø–æ—Ä—Ç—Å–º–µ–Ω";
        case "club_owner": return "–í–ª–∞—Å–Ω–∏–∫ –∫–ª—É–±—É";
        case "coach_judge": return "–¢—Ä–µ–Ω–µ—Ä/–°—É–¥–¥—è";
        default: return "";
      }
    }).filter(Boolean);

    return labels.join(" + ") || "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á";
  };

  const getDashboardLink = (role: string) => {
    // –ê–¥–º—ñ–Ω –∑–∞–≤–∂–¥–∏ –π–¥–µ –≤ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å
    if (role === "admin") return "/admin";

    switch (role) {
      case "athlete":
        return "/athlete-panel";
      case "club_owner":
        return "/dashboard/club-owner";
      case "coach_judge":
        return "/dashboard/coach-judge";
      default:
        return "/dashboard";
    }
  };

  return (
    <header className="bg-white shadow-sm sticky top-0 z-50">
      <div className="container mx-auto px-4">
        <div className="flex items-center justify-between h-16">
          {/* –õ–æ–≥–æ—Ç–∏–ø */}
          <Link href="/" className="flex items-center space-x-3">
            <Logo className="h-12 w-auto" />
            <div className="flex flex-col">
              <span className="font-bold text-lg text-gray-900">–§–µ–¥–µ—Ä–∞—Ü—ñ—è –£–∫—Ä–∞—ó–Ω–∏</span>
              <span className="text-sm text-gray-600 -mt-1">–∑—ñ –°–ø–æ—Ä—Ç–∏–≤–Ω–æ—ó –ê–µ—Ä–æ–±—ñ–∫–∏ —ñ –§—ñ—Ç–Ω–µ—Å—É</span>
              <span className="text-xs text-blue-600 font-medium">fusaf.org.ua</span>
            </div>
          </Link>

          {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
          <NavigationMenu className="hidden lg:flex">
            <NavigationMenuList>
              <NavigationMenuItem>
                <Link href="/membership" className="text-gray-700 hover:text-pink-600 px-4 py-2">
                  –ß–ª–µ–Ω—Å—Ç–≤–æ
                </Link>
              </NavigationMenuItem>

              <NavigationMenuItem>
                <NavigationMenuTrigger className="text-gray-700 hover:text-pink-600">
                  –ó–º–∞–≥–∞–Ω–Ω—è
                </NavigationMenuTrigger>
                <NavigationMenuContent>
                  <div className="w-[400px] grid gap-3 p-4">
                    <NavigationMenuLink asChild>
                      <Link href="/competitions" className="block p-3 rounded-lg hover:bg-gray-50">
                        <div className="text-sm font-medium">–ö–∞–ª–µ–Ω–¥–∞—Ä –∑–º–∞–≥–∞–Ω—å</div>
                        <div className="text-xs text-gray-500">–ü–µ—Ä–µ–≥–ª—è–¥ —É—Å—ñ—Ö –∑–º–∞–≥–∞–Ω—å</div>
                      </Link>
                    </NavigationMenuLink>
                    {/* –ó–∞–≤–∂–¥–∏ –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è */}
                    <NavigationMenuLink asChild>
                      <Link href="/competitions/create" className="block p-3 rounded-lg hover:bg-gray-50 bg-blue-50">
                        <div className="text-sm font-medium">üî• –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–º–∞–≥–∞–Ω–Ω—è (–¢–ï–°–¢)</div>
                        <div className="text-xs text-gray-500">–ü—Ä—è–º–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –±–µ–∑ –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫</div>
                      </Link>
                    </NavigationMenuLink>
                    <NavigationMenuLink asChild>
                      <Link href="/competitions/results" className="block p-3 rounded-lg hover:bg-gray-50">
                        <div className="text-sm font-medium">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏</div>
                        <div className="text-xs text-gray-500">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–º–∞–≥–∞–Ω—å</div>
                      </Link>
                    </NavigationMenuLink>
                  </div>
                </NavigationMenuContent>
              </NavigationMenuItem>

              <NavigationMenuItem>
                <Link href="/courses" className="text-gray-700 hover:text-pink-600 px-4 py-2">
                  –ö—É—Ä—Å–∏
                </Link>
              </NavigationMenuItem>

              <NavigationMenuItem>
                <Link href="/news" className="text-gray-700 hover:text-pink-600 px-4 py-2">
                  –ù–æ–≤–∏–Ω–∏
                </Link>
              </NavigationMenuItem>

              <NavigationMenuItem>
                <Link href="/clubs" className="text-gray-700 hover:text-pink-600 px-4 py-2">
                  –ö–ª—É–±–∏
                </Link>
              </NavigationMenuItem>

              <NavigationMenuItem>
                <Link href="/instructions" className="text-gray-700 hover:text-pink-600 px-4 py-2">
                  –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
                </Link>
              </NavigationMenuItem>

              {/* –ö–Ω–æ–ø–∫–∞ –∞–¥–º—ñ–Ω —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ */}
              {session?.user?.email === 'andfedos@gmail.com' && (
                <Link href="/admin">
                  <Button className="bg-yellow-500 hover:bg-yellow-600 text-black font-semibold px-4 py-2 rounded-lg shadow-md">
                    ‚ö° –ê–¥–º—ñ–Ω
                  </Button>
                </Link>
              )}
            </NavigationMenuList>
          </NavigationMenu>

          {/* –ü—Ä–∞–≤–∞ —á–∞—Å—Ç–∏–Ω–∞ */}
          <div className="flex items-center space-x-4">
            {/* –ü–æ—à—É–∫ */}
            <Button variant="ghost" size="icon" className="hidden md:flex">
              <Search className="h-5 w-5" />
            </Button>

            {/* –ê—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è */}
            {status === "loading" ? (
              <div className="w-8 h-8 bg-gray-200 rounded-full animate-pulse" />
            ) : session ? (
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost" className="relative h-10 flex items-center space-x-2">
                    <Avatar className="h-8 w-8">
                      <AvatarImage src={session.user?.image || ""} alt={session.user?.name || ""} />
                      <AvatarFallback>
                        {session.user?.name?.charAt(0)?.toUpperCase()}
                      </AvatarFallback>
                    </Avatar>
                    <div className="hidden md:flex flex-col text-left">
                      <span className="text-sm font-medium">{session.user?.name}</span>
                      <Badge variant="secondary" className="text-xs">
                        {getRolesLabels(session.user?.roles)}
                      </Badge>
                    </div>
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end" className="w-56">
                  <div className="flex items-center justify-start gap-2 p-2">
                    <div className="flex flex-col space-y-1 leading-none">
                      <p className="font-medium">{session.user?.name}</p>
                      <p className="w-[200px] truncate text-sm text-muted-foreground">
                        {session.user?.email}
                      </p>
                    </div>
                  </div>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem asChild>
                    <Link href="/profile" className="cursor-pointer">
                      <UserCircle className="mr-2 h-4 w-4" />
                      –ü—Ä–æ—Ñ—ñ–ª—å
                    </Link>
                  </DropdownMenuItem>
                  <DropdownMenuItem asChild>
                    <Link href={getDashboardLink(session.user?.roles?.[0] || "")} className="cursor-pointer">
                      <Settings className="mr-2 h-4 w-4" />
                      –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è
                    </Link>
                  </DropdownMenuItem>
                  <DropdownMenuSeparator />
                  <DropdownMenuItem onClick={handleSignOut} className="cursor-pointer">
                    <LogOut className="mr-2 h-4 w-4" />
                    –í–∏–π—Ç–∏
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            ) : (
              <div className="hidden md:flex items-center space-x-2">
                <Button
                  onClick={() => router.push('/auth/signin')}
                  variant="outline"
                  className="text-pink-600 border-pink-600 hover:bg-pink-50"
                >
                  <LogIn className="mr-2 h-4 w-4" />
                  –í—Ö—ñ–¥
                </Button>
                <Button
                  onClick={() => router.push('/auth/signup')}
                  className="bg-pink-600 hover:bg-pink-700 text-white"
                >
                  <User className="mr-2 h-4 w-4" />
                  –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
                </Button>
              </div>
            )}

            {/* –ú–æ–±—ñ–ª—å–Ω–µ –º–µ–Ω—é */}
            <Button
              variant="ghost"
              size="icon"
              className="lg:hidden"
              onClick={() => setIsMenuOpen(!isMenuOpen)}
            >
              <Menu className="h-5 w-5" />
            </Button>
          </div>
        </div>

        {/* –ú–æ–±—ñ–ª—å–Ω–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è */}
        {isMenuOpen && (
          <div className="lg:hidden border-t bg-white py-4">
            <nav className="flex flex-col space-y-2">
              <Link href="/membership" className="px-4 py-2 text-gray-700 hover:text-pink-600">
                –ß–ª–µ–Ω—Å—Ç–≤–æ
              </Link>
              <Link href="/competitions" className="px-4 py-2 text-gray-700 hover:text-pink-600">
                –ó–º–∞–≥–∞–Ω–Ω—è
              </Link>
              <Link href="/courses" className="px-4 py-2 text-gray-700 hover:text-pink-600">
                –ö—É—Ä—Å–∏
              </Link>
              <Link href="/news" className="px-4 py-2 text-gray-700 hover:text-pink-600">
                –ù–æ–≤–∏–Ω–∏
              </Link>
              <Link href="/clubs" className="px-4 py-2 text-gray-700 hover:text-pink-600">
                –ö–ª—É–±–∏
              </Link>
              <Link href="/instructions" className="px-4 py-2 text-gray-700 hover:text-pink-600">
                –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
              </Link>
              <div className="px-4 pt-4 border-t">
                {session ? (
                  <div className="space-y-2">
                    <div className="text-sm text-gray-600">
                      –ü—Ä–∏–≤—ñ—Ç, {session.user?.name}!
                    </div>
                    <Button onClick={handleSignOut} variant="outline" className="w-full">
                      –í–∏–π—Ç–∏
                    </Button>
                  </div>
                ) : (
                  <div className="space-y-2">
                    <Button
                      onClick={() => router.push('/auth/signin')}
                      variant="outline"
                      className="w-full text-pink-600 border-pink-600"
                    >
                      <LogIn className="mr-2 h-4 w-4" />
                      –í—Ö—ñ–¥
                    </Button>
                    <Button
                      onClick={() => router.push('/auth/signup')}
                      className="w-full bg-pink-600 hover:bg-pink-700 text-white"
                    >
                      <User className="mr-2 h-4 w-4" />
                      –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
                    </Button>
                  </div>
                )}
              </div>
            </nav>
          </div>
        )}
      </div>
    </header>
  );
}
