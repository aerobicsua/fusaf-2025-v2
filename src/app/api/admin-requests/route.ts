import { NextResponse } from 'next/server';
import { HybridStorage } from '@/lib/hybrid-storage';

// üìã –ü–£–ë–õ–Ü–ß–ù–ò–ô ENDPOINT –¥–ª—è –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ - –ø–æ–∫–∞–∑—É—î –∑–∞–ø–∏—Ç–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è AdminRoleRequestsTab –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –∑–∞–ø–∏—Ç—ñ–≤

export async function GET(request: Request) {
  try {
    console.log('üìã Admin requests endpoint: –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–ª—è –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ');

    const url = new URL(request.url);
    const status = url.searchParams.get('status');

    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∑ HybridStorage
    const allRequests = HybridStorage.getAll();
    let filteredRequests = allRequests;

    if (status && status !== 'all') {
      filteredRequests = allRequests.filter(req => req.status === status);
    }

    console.log('üìã Admin endpoint –∑–∞–ø–∏—Ç–∏:', {
      total: allRequests.length,
      filtered: filteredRequests.length,
      status,
      storageType: 'HYBRID_STORAGE'
    });

    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥–∞–Ω—ñ –≤ —Ç–æ–º—É –∂ —Ñ–æ—Ä–º–∞—Ç—ñ —â–æ –π –æ—Å–Ω–æ–≤–Ω–∏–π API
    return NextResponse.json({
      requests: filteredRequests.sort((a, b) =>
        new Date(b.requestDate).getTime() - new Date(a.requestDate).getTime()
      ),
      total: filteredRequests.length,
      debug: {
        globalTotal: allRequests.length,
        storageType: 'HYBRID_STORAGE',
        lastUpdate: new Date().toISOString(),
        stats: HybridStorage.getStats(),
        note: '–ü—É–±–ª—ñ—á–Ω–∏–π endpoint –¥–ª—è –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ',
        endpoint: '/api/admin-requests'
      }
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ admin requests endpoint:', error);
    return NextResponse.json(
      {
        error: '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤',
        details: error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞',
        storageType: 'HYBRID_STORAGE'
      },
      { status: 500 }
    );
  }
}
