import { NextResponse } from 'next/server';
import { AthletesStorage } from '@/lib/athletes-storage';

// GET - –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞ –∑–∞ ID
export async function GET(
  request: Request,
  { params }: { params: { id: string } }
) {
  try {
    const athleteId = params.id;

    console.log('üèÜ GET /api/athletes/[id] –¥–ª—è ID:', athleteId);

    const athlete = AthletesStorage.findById(athleteId);

    if (!athlete) {
      return NextResponse.json(
        { error: '–°–ø–æ—Ä—Ç—Å–º–µ–Ω–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' },
        { status: 404 }
      );
    }

    // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é (email –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π –¥–ª—è –±–µ–∑–ø–µ–∫–∏)
    const athleteDetails = {
      ...athlete,
      email: athlete.email.replace(/(.{2}).*(@.*)/, '$1***$2')
    };

    return NextResponse.json({
      athlete: athleteDetails,
      debug: {
        storageType: 'ATHLETES_STORAGE',
        timestamp: new Date().toISOString()
      }
    });

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ GET /api/athletes/[id]:', error);
    return NextResponse.json(
      { error: '–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Å–ø–æ—Ä—Ç—Å–º–µ–Ω–∞' },
      { status: 500 }
    );
  }
}
