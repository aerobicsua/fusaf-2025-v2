/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: false,

  // üö´ –ü–û–í–ù–ï –í–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –ü–ï–†–ï–í–Ü–†–û–ö –î–õ–Ø VERCEL
  eslint: {
    ignoreDuringBuilds: true,
    dirs: [],
    ignoreBuildErrors: true,
  },
  typescript: {
    ignoreBuildErrors: true,
  },

  // –î–æ–¥–∞—Ç–∫–æ–≤–µ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫
  swcMinify: true,

  // üåç Environment Variables
  env: {
    SKIP_TYPE_CHECK: 'true',
    DISABLE_ESLINT: 'true',
    CI: 'false',
  },

  // üõ†Ô∏è Webpack –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
  webpack: (config, { buildId, dev, isServer }) => {
    // –í—ñ–¥–∫–ª—é—á–∞—î–º–æ TypeScript checker —Ç–∞ ESLint –ø–æ–≤–Ω—ñ—Å—Ç—é
    if (!dev && !isServer) {
      config.plugins = config.plugins.filter(
        plugin => plugin.constructor.name !== 'ForkTsCheckerWebpackPlugin' &&
                  plugin.constructor.name !== 'ESLintWebpackPlugin'
      );
    }

    // Node.js polyfills –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
    config.resolve.fallback = {
      ...config.resolve.fallback,
      fs: false,
      path: false,
      crypto: false,
      stream: false,
      util: false,
      buffer: false,
      events: false,
      os: false,
    };

    return config;
  },

  // üñºÔ∏è –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –∑–æ–±—Ä–∞–∂–µ–Ω—å –¥–ª—è Vercel
  images: {
    unoptimized: true,
    domains: ['ext.same-assets.com', 'same-assets.com'],
    remotePatterns: [
      {
        protocol: 'https',
        hostname: 'ext.same-assets.com',
      },
    ],
  },

  // üîÄ –†–µ–¥—ñ—Ä–µ–∫—Ç–∏
  async redirects() {
    return [];
  },

  // ‚ö° Vercel-specific –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
  experimental: {
    serverActions: {
      allowedOrigins: ['localhost:3000', '*.vercel.app']
    }
  },

  // üîß Compiler –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
  compiler: {
    removeConsole: process.env.NODE_ENV === 'production',
  },
};

module.exports = nextConfig;
